rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isValidUser(user) {
      return user.size() == 4
        && user.displayName is string
        && user.photoURL is string
        && user.slug is string
        && user.slackId is string;
    }

    match /users/{userId} {
      allow read;
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.diff(resource.data)
                         .affectedKeys()
                         .hasOnly(["displayName", "photoURL", "slug"])
                    && isValidUser(request.resource.data);
    }

    match /athlons/{document=**} {
      allow read;
    }

    function isValidGameScore(score) {
      return score.size() == 3
        && score.rawScore is number
        && score.tiebreakScore is number
        && score.athlon is path;
    }

    match /games/{document=**} {
      allow read;
      match /scores/{userId} {
        allow read;
        allow write: if request.auth != null
                     && request.auth.uid == userId
                     && isValidGameScore(request.resource.data);
      }
    }

    match /gameRules/{document=**} {
      allow read;
    }
  }
}