name: Test and Deploy

on:
  - push
  - pull_request
  - pull_request_target

jobs:
  check_access:
    runs-on: ubuntu-latest

    if: >
      github.event_name == 'push' ||
      (
        github.event.pull_request.head.repo.full_name == github.repository &&
        (
          (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
          (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
        )
      )

    outputs:
      status: ${{ steps.check.outcome }}

    steps:
      - id: check
        name: Check if the PR author has access to the Firebase project
        env:
          FIREBASE_SERVICE_ACCOUNT_TSG_DECATHLON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSG_DECATHLON }}
        continue-on-error: true
        run: |
          if [ -z "$FIREBASE_SERVICE_ACCOUNT_TSG_DECATHLON" ]; then
            echo "The FIREBASE_SERVICE_ACCOUNT_TSG_DECATHLON secret is not set."
            exit 1
          fi

  test:
    name: Test

    runs-on: ubuntu-latest

    if: >
      github.event_name == 'push' ||
      (
        github.event.pull_request.head.repo.full_name == github.repository &&
        (
          (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
          (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
        )
      )

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request_target' && format('refs/pull/{0}/merge', github.event.pull_request.number) || github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Check compilation errors on TypeScript files
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: vite-output
          path: .output/
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload playwright-report to Firebase Hosting live channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: ${{ !cancelled() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        continue-on-error: true
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSG_DECATHLON }}
          channelId: live
          projectId: tsg-decathlon
          target: playwright

      - name: Run Firebase Functions predeploy scripts
        run: npm --prefix functions run lint && npm --prefix functions run build

  deploy_hosting_preview:
    name: Deploy Firebase Hosting Preview Channel

    needs: [check_access, test]

    if: ${{ !cancelled() && needs.check_access.outputs.status == 'success' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event_name == 'pull_request_target' && format('refs/pull/{0}/merge', github.event.pull_request.number) || github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Download vite-output artifact
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: vite-output
          path: .output/

      - name: Download playwright-report artifact
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: playwright-report
          path: playwright-report/

      - name: Make sure Hosting directories exist
        run: mkdir -p .output/public playwright-report

      - name: Deploy to Firebase Hosting preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSG_DECATHLON }}
          projectId: tsg-decathlon
          channelId: >-
            ${{
              github.event_name == 'push'
                && format('branch-{0}', github.ref_name)
                || null
            }}

  deploy_firebase:
    name: Deploy Firebase Configurations

    needs: [test]

    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Restore .env file from secrets
        run: echo "${{ secrets.FUNCTIONS_DOTENV }}" > functions/.env

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v13.4.0
        with:
          args: deploy --except hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy_hosting:
    name: Deploy Firebase Hosting

    needs: [test]

    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm ci && npm run build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TSG_DECATHLON }}
          channelId: live
          projectId: tsg-decathlon
          target: app
