export const athlonNames = new Map<number | undefined, string>([
	[0, 'Medenathlon'],
	[1, 'Monoathlon'],
	[2, 'Duathlon'],
	[3, 'Triathlon'],
	[4, 'Tetrathlon'],
	[5, 'Pentathlon'],
	[6, 'Hexathlon'],
	[7, 'Heptathlon'],
	[8, 'Octathlon'],
	[9, 'Enneathlon'],
	[10, 'Decathlon'],
	[11, 'Hendecathlon'],
	[12, 'Dodecathlon'],
	[13, 'Triadecathlon'],
	[14, 'Tessaradecathlon'],
	[15, 'Pentedecathlon'],
	[16, 'Hexadecathlon'],
	[17, 'Heptadecathlon'],
	[18, 'Octodecathlon'],
	[19, 'Enneadecathlon'],
	[20, 'Icosathlon'],
]);

export const codegolfLanguageAllowList: [string, string][] = [
	['multi-reader', 'multi-reader'],
	['codemania', 'CodeMania'],
	['3var', '3var'],
	['axo', 'Axo'],
	['befunge93', 'Befunge-93'],
	['befunge98', 'Befunge-98'],
	['seed', 'Seed'],
	['brainfuck-esotope', 'Brainfuck (esotope)'],
	['c-gcc', 'C (GCC)'],
	['glass', 'Glass'],
	['r', 'R'],
	['ruby', 'Ruby 2.7.1'],
	['ruby-trunk', 'Ruby trunk'],
	['golfscript', 'GolfScript'],
	['hexagony', 'Hexagony'],
	['stackcats', 'Stack Cats'],
	['standback', '(?i:standback)'],
	['starry', 'Starry'],
	['cy', 'Cy'],
	['labyrinth', 'Labyrinth'],
	['typhon', 'Typhon'],
	['alice', 'Alice'],
	['wake', 'wake'],
	['reversed-c', 'reversed-c'],
	['copos-rb', 'copos (Ruby)'],
	['golfish', 'golfish'],
	['pxem', 'Pxem'],
	['arithmetic', 'Arithmetic'],
	['vim', 'Vim'],
	['autovim', 'Autovim'],
	['v-vim', 'V (Vim)'],
	['pyramid-scheme', 'Pyramid Scheme'],
	['goruby', 'goruby'],
	['ruby1', 'Ruby 1.8'],
	['grass', 'Grass'],
	['modanshogi', 'ModanShogi'],
	['ppap', 'PPAP'],
	['make', 'Make'],
	['malbolge', 'Malbolge'],
	['piet', 'Piet'],
	['python1', 'Python 1'],
	['rail', 'Rail'],
	['simula', 'Simula'],
	['snowman', 'Snowman'],
	['streem', 'Streem'],
	['unlambda', 'Unlambda'],
	['verilog', 'Verilog (Icarus Verilog)'],
	['wierd', 'Wierd'],
	['wordcpu', 'Word!CPU'],
	['aheui', 'Aheui'],
	['beatnik', 'Beatnik'],
	['blc', 'Binary lambda calculus'],
	['spl', 'Shakespeare'],
	['emojicode', 'Emojicode'],
	['intercal', 'INTERCAL'],
	['lolcode', 'LOLCODE'],
	['minus', 'Minus'],
	['sqlite3', 'SQLite3'],
	['taxi', 'Taxi'],
	['adjust', 'ADJUST'],
	['braille', 'Braille'],
	['rust', 'Rust'],
	['cubically', 'Cubically'],
	['sceql', 'Sceql'],
	['apl', 'APL'],
	['wat', 'WebAssembly Text Format'],
	['lazyk', 'Lazy-K'],
	['doubleplusungood', 'Doubleplusungood'],
	['llvm-ir', 'LLVM 10 IR'],
	['hanoi_stack', 'Hanoi_Stack'],
	['brainfuck-moratorium', 'Brainfuck (moratorium)'],
	['csharp-dotnet', 'C# (.NET Core)'],
	['fsharp-dotnet', 'F# (.NET Core)'],
	['fortran', 'Fortran 2018'],
	['ring', 'Ring'],
	['snobol', 'SNOBOL4'],
	['cobol', 'COBOL'],
	['fetlang', 'Fetlang'],
	['alphabeta', 'AlphaBeta'],
	['tcl', 'Tcl'],
	['rapira', 'РАПИРА'],
	['vlang', 'V'],
	['cyclicbrainfuck', 'Cyclic Brainfuck'],
	['olang', 'O'],
	['wren', 'Wren'],
	['java', 'Java'],
	['arnoidc', 'ArnoidC'],
	['evil', 'Evil'],
	['js-rhino', 'JavaScript (Rhino)'],
	['floater', 'Floater'],
	['cjam', 'CJam'],
	['convex', 'Convex'],
	['kotlin', 'Kotlin'],
	['whenever', 'Whenever'],
	['xslt', 'XSLT'],
	['python2', 'Python 2'],
	['csharp', 'C# (Mono)'],
	['velato', 'Velato'],
	['pure-folders', 'Pure Folders'],
	['concise-folders', 'Concise Folders'],
	['function2d', 'Function'],
	['produire', 'プロデル'],
	['z80', 'Z80'],
	['bubble-sort', 'BubbleSortLanguage'],
	['classic-music-theory', 'ClassicMusicTheoryForProgrammer'],
	['haystack', 'Haystack'],
	['stuck', 'Stuck'],
	['unicat', 'Unicat'],
	['unreadable', 'Unreadable'],
	['zombie', 'ZOMBIE'],
	['ffb', 'Foobar and Foobaz and Barbaz, oh my!'],
	['aubergine', 'Aubergine'],
	['ubergenes', 'UberGenes'],
	['path', 'PATH'],
	['recurse', 'Recurse'],
	['fernando', 'FerNANDo'],
	['gs2', 'gs2'],
	['logicode', 'Logicode'],
	['minimal2d', 'Minimal-2D'],
	['i4004asm', 'Intel 4004 Assembly'],
	['suzy', 'Suzy'],
	['bash-pure', 'Bash (pure)'],
	['bash-busybox', 'Bash (busybox)'],
	['fish-shell-pure', 'Fish (pure)'],
	['ezhil', 'எழில்'],
	['snusp', 'SNUSP'],
	['zsh-pure', 'Zsh (pure)'],
	['jq', 'jq'],
	['node', 'Node.js'],
	['unicue', 'Unicue'],
	['beam', 'Beam'],
	['cubix', 'Cubix'],
	['japt', 'Japt'],
	['stop', 'STOP'],
	['htms', 'htms'],
	['maybelater', 'Maybe Later'],
	['nadesiko', 'なでしこ3'],
	['floating', 'Floating'],
	['qlb', '‫قلب‬'],
	['calc', 'LibreOffice Calc'],
	['nuts', 'Nuts'],
	['canvas', 'Canvas'],
	['wysiscript', 'WysiScript'],
	['tetris', 'Tetris'],
	['wenyan', '文言'],
	['reasonml', 'ReasonML'],
	['encapsulation', 'Encapsulation'],
	['functional', 'Functional()'],
	['seclusion', 'Seclusion'],
	['serenity', 'Serenity'],
	['transceternal', 'Transceternal'],
	['compile-time-typescript', 'Compile-time TypeScript'],
	['octave', 'Octave'],
	['matl', 'MATL'],
	['perl', 'Perl'],
	['slashes', '///'],
	['element', 'Element'],
	['php', 'PHP 7.0'],
	['irc', 'IRC'],
	['python3', 'Python 3'],
	['exchangeif', 'ExchangeIF'],
	['trumpscript', 'TrumpScript'],
	['2sable', '2sable'],
	['fish', '><>'],
	['arcyou', 'Arcyóu'],
	['bots', 'Bots'],
	['emoji', 'Emoji'],
	['zucchini', 'Zucchini'],
	['cardinal', 'Cardinal'],
	['hbcht', 'Half-Broken Car in Heavy Traffic'],
	['jelly', 'Jelly'],
	['jellyfish', 'Jellyfish'],
	['width', 'Width'],
	['asciidots', 'AsciiDots'],
	['picfunge', 'PicFunge'],
	['iwashi', 'Iwashi'],
	['hypertorus', 'HyperTorus'],
	['gaia', 'Gaia'],
	['triangularity', 'Triangularity'],
	['backhand', 'Backhand'],
	['mines', 'Mines'],
	['cmd', 'cmd.exe'],
	['lua', 'Lua'],
	['rprogn', 'Reverse Programmer Notation'],
	['ocaml', 'OCaml'],
	['coq', 'Coq'],
	['haskell', 'Haskell'],
	['husk', 'Husk'],
	['whitespace', 'Whitespace'],
	['erlang', 'Erlang'],
	['elixir', 'Elixir'],
	['05ab1e', '05AB1E'],
	['awk', 'awk (GNU awk)'],
	['perl6', 'Perl 6'],
	['ballerina', 'Ballerina'],
	['sed', 'sed'],
	['riscv', 'RISC-V (32bit, ELF)'],
	['m4', 'm4'],
	['racket', 'Racket'],
	['gnuplot', 'gnuplot'],
	['golang', 'Go'],
	['braintwist', 'braintwist'],
	['oh', 'oh'],
	['zen', 'Zen'],
	['crystal', 'Crystal'],
	['d-dmd', 'D (DMD)'],
	['d-gdc', 'D (GDC)'],
	['powershell', 'PowerShell'],
	['ruby0.49', 'Ruby 0.49'],
	['fugue', 'Fugue'],
	['x86asm-nasm', 'x86 Assembly (nasm)'],
	['swift', 'Swift'],
	['cpp-clang', 'C++ (Clang)'],
	['cpp-compile-time-clang', 'Compile-time C++ (Clang, C++11)'],
	['perl1', 'Perl 1.0'],
	['moo', 'moo'],
	['clisp-sbcl', 'Common LISP (SBCL)'],
	['abc', 'ABC'],
	['tex', 'TeX (plain)'],
	['egison', 'Egison'],
	['brainfuck-bfi', 'Brainfuck (BFI)'],
];

codegolfLanguageAllowList.sort(([, nameA], [, nameB]) => nameA.localeCompare(nameB));
